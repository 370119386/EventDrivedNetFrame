// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: DDNFDefine.proto

#ifndef PROTOBUF_INCLUDED_DDNFDefine_2eproto
#define PROTOBUF_INCLUDED_DDNFDefine_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_DDNFDefine_2eproto LIBPROTOC_EXPORT

namespace protobuf_DDNFDefine_2eproto {
// Internal implementation detail -- do not use these members.
struct LIBPROTOC_EXPORT TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void LIBPROTOC_EXPORT AddDescriptors();
}  // namespace protobuf_DDNFDefine_2eproto
namespace DDNF {
class MsgPackage;
class MsgPackageDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgPackageDefaultTypeInternal _MsgPackage_default_instance_;
}  // namespace DDNF
namespace google {
namespace protobuf {
template<> LIBPROTOC_EXPORT ::DDNF::MsgPackage* Arena::CreateMaybeMessage<::DDNF::MsgPackage>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace DDNF {

enum EGameEventCode {
  EGEC_SUCCESS = 0,
  EGEC_UNKOWN_ERROR = 1,
  EGameEventCode_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  EGameEventCode_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
LIBPROTOC_EXPORT bool EGameEventCode_IsValid(int value);
const EGameEventCode EGameEventCode_MIN = EGEC_SUCCESS;
const EGameEventCode EGameEventCode_MAX = EGEC_UNKOWN_ERROR;
const int EGameEventCode_ARRAYSIZE = EGameEventCode_MAX + 1;

LIBPROTOC_EXPORT const ::google::protobuf::EnumDescriptor* EGameEventCode_descriptor();
inline const ::std::string& EGameEventCode_Name(EGameEventCode value) {
  return ::google::protobuf::internal::NameOfEnum(
    EGameEventCode_descriptor(), value);
}
inline bool EGameEventCode_Parse(
    const ::std::string& name, EGameEventCode* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EGameEventCode>(
    EGameEventCode_descriptor(), name, value);
}
// ===================================================================

class LIBPROTOC_EXPORT MsgPackage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:DDNF.MsgPackage) */ {
 public:
  MsgPackage();
  virtual ~MsgPackage();

  MsgPackage(const MsgPackage& from);

  inline MsgPackage& operator=(const MsgPackage& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgPackage(MsgPackage&& from) noexcept
    : MsgPackage() {
    *this = ::std::move(from);
  }

  inline MsgPackage& operator=(MsgPackage&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgPackage& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgPackage* internal_default_instance() {
    return reinterpret_cast<const MsgPackage*>(
               &_MsgPackage_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(MsgPackage* other);
  friend void swap(MsgPackage& a, MsgPackage& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgPackage* New() const final {
    return CreateMaybeMessage<MsgPackage>(NULL);
  }

  MsgPackage* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgPackage>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgPackage& from);
  void MergeFrom(const MsgPackage& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgPackage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int64 id() const;
  void set_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:DDNF.MsgPackage)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_DDNFDefine_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// MsgPackage

// int64 id = 1;
inline void MsgPackage::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 MsgPackage::id() const {
  // @@protoc_insertion_point(field_get:DDNF.MsgPackage.id)
  return id_;
}
inline void MsgPackage::set_id(::google::protobuf::int64 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:DDNF.MsgPackage.id)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace DDNF

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::DDNF::EGameEventCode> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::DDNF::EGameEventCode>() {
  return ::DDNF::EGameEventCode_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_DDNFDefine_2eproto
